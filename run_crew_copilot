#!/bin/bash

#this shell script that runs a python module that, if prints the text "TimeoutException" will run the module again a total of 3 times before quitting

#this is the python module that will be run
module="test.py"

#this is the number of times the module will be run
max=3

#this is the number of times the module has been run
count=0

#this is the variable that will hold the output of the module
output=""
while [ $count -lt $max ]
do
    output=$(python $module)
    if [ "$output" == "TimeoutException" ]
    then
        echo "TimeoutException"
        count=$((count+1))
    else
        echo "Success"
        break
    fi
done

if [ $count -eq $max ]
then
    echo "Failed"
fi

# Path: test.py
#!/usr/bin/python

import time

time.sleep(5)
print "TimeoutException"

#I am sending you the codedump of Bash script that runs a python module that, if prints the text "TimeoutException" will run the module again a total of 3 times before quitting that you can see here: https://codedump.io/share/0Z0ZQZQZQZQZ/1

#I would suggest to use a function instead of a while loop. This way you can use the return value of the function to determine if the script should be run again or not. Also, you can use the return value of the function to determine if the script was successful or not.

#!/bin/bash

#this shell script that runs a python module that, if prints the text "TimeoutException" will run the module again a total of 3 times before quitting

#this is the python module that will be run
module="test.py"

#this is the number of times the module will be run
max=3

#this is the number of times the module has been run
count=0

#this is the variable that will hold the output of the module
output=""

function run_module {
    output=$(python $module)
    if [ "$output" == "TimeoutException" ]
    then
        echo "TimeoutException"
        return 1
    else
        echo "Success"
        return 0
    fi
}

while [ $count -lt $max ]
do
    run_module
    if [ $? -eq 0 ]
    then
        break
    fi
    count=$((count+1))
done

if [ $count -eq $max ]
then
    echo "Failed"
fi
